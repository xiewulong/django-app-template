# import logging

from django.shortcuts import get_object_or_404
from django.utils.decorators import method_decorator
from django.views.decorators.csrf import csrf_exempt
from django.views.decorators.http import require_http_methods
from django.views.generic import View

from .models import User
from .utils import simple_request, simple_response


# logger = logging.getLogger(__name__)

@require_http_methods(['GET'])
@simple_response
def index(request):
    # logger.warning('Warning')
    # logger.info('Info')
    return 'Index'


@method_decorator(csrf_exempt, name = 'dispatch')
class UsersView(View):

    @simple_response
    def get(self, request):
        users = User.objects.all()[:20]
        return users

    @simple_request
    @simple_response
    def post(self, request):
        user = User(**request.body_json)
        user.save()
        return user

@method_decorator(csrf_exempt, name = 'dispatch')
class UserView(View):

    @simple_response
    def get(self, request, id):
        user = get_object_or_404(User, id = id)
        return user

    @simple_request
    @simple_response
    def patch(self, request, id):
        return f'Update(patch) user {id}'

    @simple_request
    @simple_response
    def put(self, request, id):
        return f'Update(put) user {id}'

    @simple_response
    def delete(self, request, id):
        return f'Delete user {id}'
