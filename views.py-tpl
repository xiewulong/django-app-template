# import logging

from django.http import HttpResponse
from django.utils.decorators import method_decorator
from django.views.decorators.csrf import csrf_exempt
from django.views.decorators.http import require_http_methods
from django.views.generic import View


# logger = logging.getLogger(__name__)

@require_http_methods(['GET'])
def index(request):
    # logger.warning('Warning')
    # logger.info('Info')
    return HttpResponse('Index')

@method_decorator(csrf_exempt, name = 'dispatch')
class UsersView(View):

    def get(self, request):
        return HttpResponse('Get users')

    def post(self, request):
        return HttpResponse('Create user')

@method_decorator(csrf_exempt, name = 'dispatch')
class UserView(View):

    def get(self, request, id):
        return HttpResponse('Get user')

    def patch(self, request, id):
        return HttpResponse('Update(patch) user')

    def put(self, request, id):
        return HttpResponse('Update(put) user')

    def delete(self, request, id):
        return HttpResponse('Delete user')
